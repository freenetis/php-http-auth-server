<?php

/* 
 * This file is a part of PHP-HTTP-Auth-server library, released under terms 
 * of GPL-3.0 licence. Copyright (c) 2014, UnArt Slavičín, o.s. All rights 
 * reserved.
 */

namespace phphttpauthserver;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-11-22 at 20:10:00.
 */
class HttpAuthTest extends \PHPUnit_Framework_TestCase {
    
    /**
     * @var EmptyTestAccountManager
     */
    protected $am;

    protected function setUp() {
        $this->am = new EmptyTestAccountManager();
    }
    
    /**
     * @covers HttpAuth::factory
     */
    public function testFactory() {
        // invalid type
        try {
            HttpAuth::factory('aaa', $this->am, 'Test');
            $this->fail('expected InvalidArgumentException');
        } catch (\InvalidArgumentException $ex) {
        } catch (\Exception $ex) {
            $this->fail('expected InvalidArgumentException');
        }
        // invalid account manager
        try {
            HttpAuth::factory('basic', NULL, 'Test');
            $this->fail('expected InvalidArgumentException');
        } catch (\InvalidArgumentException $ex) {
        } catch (\Exception $ex) {
            $this->fail('expected InvalidArgumentException' . $ex);
        }
        // invalid realm name
        try {
            HttpAuth::factory('basic', $this->am, NULL);
            $this->fail('expected InvalidArgumentException');
        } catch (\InvalidArgumentException $ex) {
        } catch (\Exception $ex) {
            $this->fail('expected InvalidArgumentException');
        }
        // valid calls
        $basic = HttpAuth::factory('basic', $this->am, 'test');
        $this->assertNotNull($basic);
        $this->asserttrue($basic instanceof HttpAuth);
        
        $digest = HttpAuth::factory('digest', $this->am, 'test');
        $this->assertNotNull($digest);
        $this->asserttrue($digest instanceof HttpAuth);
    }

}

/**
 * Test account manager.
 */
class EmptyTestAccountManager implements IAccountManager {
    public function getUserPassword($username) {
        return FALSE;
    }
}
